plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

//	 'p6spy:p6spy'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.2'

    runtimeOnly 'mysql:mysql-connector-java'

    runtime 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

configure(rootProject) {
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation "com.querydsl:querydsl-jpa"
        implementation "com.querydsl:querydsl-core"
        // querydsl JPAAnnotationProcessor 사용 지정
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
    }

    // querydsl
    def querydslSrcDir = "$buildDir/generated/querydsl"
    sourceSets {
        main.java.srcDirs += [querydslSrcDir]
    }

    tasks.withType(JavaCompile) {
        options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
    }

    clean.doLast {
        file(querydslSrcDir).deleteDir()
    }
}